version: 2.1

orbs:
  # aws-ecr: circleci/aws-ecr@6.15.3\
  slack: circleci/slack@4.3.1
  aws-code-deploy: circleci/aws-code-deploy@2.0.0
jobs:
  build:
    docker:
     - image: circleci/node:lts
     - image: circleci/mysql:5.7
       environment:
          MYSQL_USER=meet-clone-1
          MYSQL_PASSWORD=meet-clone-1
          MYSQL_ALLOW_EMPTY_PASSWORD=false
          MYSQL_DATABASE=meet-clone-1
    working_directory: ~/project/server     
    steps:
      - checkout:
            path: ~/project
      - run: pwd
      - run: npm --version
      - run: npm install   
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_on_hold_1
      
workflows:
  build_and_test:
    jobs:
      - build
  # ecr 이미지 사용 할 시
  # build-and-deploy:
  #   jobs:
  #     - aws-ecr/build-and-push-image:
  #         account-url: AWS_ECR_URL
  #         aws-access-key-id: AWS_IAM_ID
  #         aws-secret-access-key: AWS_IAM_SECRET
  #         region: AWS_DEFAULT_REGION
  #         repo: meet-clone
  #         dockerfile: DockerFile
  #         path: ~/project
  #         create-repo: true
  deploy_application:
    jobs:
      - aws-code-deploy/deploy:
          filters:
            branches:
              only: master
          application-name: meet-clone
          bundle-bucket: meet-clone-deploy
          bundle-key: meet-clone-deploy-zip
          deployment-group: meet-clone-code-deploy-group
          service-role-arn: meet-clone-codedeploy
      - slack/on-hold:
          requires:
            - aws-code-deploy/deploy
          template: basic_on_hold_1
